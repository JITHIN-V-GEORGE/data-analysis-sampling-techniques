{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN9CrSQTXYsP4fhrNDk+5st"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"gdJYEYiBoX44","executionInfo":{"status":"ok","timestamp":1747676546148,"user_tz":-330,"elapsed":43,"user":{"displayName":"jithinvgeorge19","userId":"07500276675486596672"}}},"outputs":[],"source":["import pandas as pd #useful for the dataset\n","import numpy as np"]},{"cell_type":"markdown","source":["Load data sets from local directory"],"metadata":{"id":"KvrmojKYpBCP"}},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"8msMZUXBpfqQ","executionInfo":{"status":"ok","timestamp":1747676840701,"user_tz":-330,"elapsed":6149,"user":{"displayName":"jithinvgeorge19","userId":"07500276675486596672"}},"outputId":"b2b413c0-76a5-4132-8689-195f60235e8a"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-8f22ea16-ebcc-4084-a661-b5aaed15af5f\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-8f22ea16-ebcc-4084-a661-b5aaed15af5f\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Dataset.csv to Dataset.csv\n"]}]},{"cell_type":"markdown","source":["Load Data set"],"metadata":{"id":"UN62FlHKqVFz"}},{"cell_type":"code","source":["dataset = pd.read_csv('Dataset.csv')\n","print(dataset.shape) #row & colums\n","print(dataset.describe()) #mean , min , max ,std\n","print(dataset.head(10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"im5Ym-Mqpgdy","executionInfo":{"status":"ok","timestamp":1747677509791,"user_tz":-330,"elapsed":160,"user":{"displayName":"jithinvgeorge19","userId":"07500276675486596672"}},"outputId":"79871743-e835-4520-ea63-12252a84bd89"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["(1460, 3)\n","                Id        LotArea      SalePrice\n","count  1460.000000    1460.000000    1460.000000\n","mean    730.500000   10516.828082  180921.195890\n","std     421.610009    9981.264932   79442.502883\n","min       1.000000    1300.000000   34900.000000\n","25%     365.750000    7553.500000  129975.000000\n","50%     730.500000    9478.500000  163000.000000\n","75%    1095.250000   11601.500000  214000.000000\n","max    1460.000000  215245.000000  755000.000000\n","   Id  LotArea  SalePrice\n","0   1     8450     208500\n","1   2     9600     181500\n","2   3    11250     223500\n","3   4     9550     140000\n","4   5    14260     250000\n","5   6    14115     143000\n","6   7    10084     307000\n","7   8    10382     200000\n","8   9     6120     129900\n","9  10     7420     118000\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"0IN9pdIfr4UB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["simple random sampling"],"metadata":{"id":"l848y_P5tGLv"}},{"cell_type":"code","source":["simpleRandomsample = dataset.sample(n=5).sort_values(by='Id')\n","mean_simpleRandomsample = round(simpleRandomsample['SalePrice'].mean(),3)\n","print(\"mean of simpleRandomsample:\",mean_simpleRandomsample)\n","print(simpleRandomsample)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uyUgWrhztK30","executionInfo":{"status":"ok","timestamp":1747678240018,"user_tz":-330,"elapsed":20,"user":{"displayName":"jithinvgeorge19","userId":"07500276675486596672"}},"outputId":"59081fe9-45bd-4c07-a955-f7c4e64dc1ae"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["mean of simpleRandomsample: 143240.0\n","        Id  LotArea  SalePrice\n","8        9     6120     129900\n","249    250   159000     277000\n","383    384     9000      76000\n","850    851     4435     131500\n","1232  1233     9842     101800\n"]}]},{"cell_type":"markdown","source":["systematic sampling"],"metadata":{"id":"ZWdyacX_vsYK"}},{"cell_type":"code","source":["index = np.arange(0,len(dataset),step=3)\n","#print (index)\n","systematicsample = dataset.iloc[index]\n","mean_systematicsample = round(systematicsample['SalePrice'].mean(),3)\n","print(\"mean of systematicsample:\",mean_simpleRandomsample)\n","print(systematicsample)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GRQ5wpPzupdn","executionInfo":{"status":"ok","timestamp":1747679101076,"user_tz":-330,"elapsed":30,"user":{"displayName":"jithinvgeorge19","userId":"07500276675486596672"}},"outputId":"ae94dc31-be89-4b1a-8847-6436e8505569"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["mean of systematicsample: 143240.0\n","        Id  LotArea  SalePrice\n","0        1     8450     208500\n","3        4     9550     140000\n","6        7    10084     307000\n","9       10     7420     118000\n","12      13    12968     144000\n","...    ...      ...        ...\n","1446  1447    26142     157900\n","1449  1450     1533      92000\n","1452  1453     3675     145000\n","1455  1456     7917     175000\n","1458  1459     9717     142125\n","\n","[487 rows x 3 columns]\n"]}]},{"cell_type":"code","source":["Cluster Sampling"],"metadata":{"id":"4bHD1Un1wrHI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n=5\n","# Divide the unit into cluster of equal size\n","dataset['cluster_id'] = np.repeat([range(1,n+1)],len(dataset)/n)\n","index = []\n","# for this formula,  cluster id must be an even number\n","for i in range(0,len(dataset)):\n","  if dataset['cluster_id'].iloc[i]%2 == 0:\n","    index.append(i)\n","Clustersample = dataset.iloc[index]\n","mean_clustersample = round(Clustersample['SalePrice'].mean(),3)\n","print(\"mean of clustesample:\",mean_clustersample)\n","print(Clustersample)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uB8vEIZ9zf4P","executionInfo":{"status":"ok","timestamp":1747680752600,"user_tz":-330,"elapsed":22,"user":{"displayName":"jithinvgeorge19","userId":"07500276675486596672"}},"outputId":"ae7a7f63-58dd-4ad6-a2f8-c42e7eb04720"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["mean of clustesample: 178023.509\n","        Id  LotArea  SalePrice  cluster_id\n","292    293    11409     131000           2\n","293    294    16659     235000           2\n","294    295     9600     167000           2\n","295    296     7937     142500           2\n","296    297    13710     152000           2\n","...    ...      ...        ...         ...\n","1163  1164    12900     108959           4\n","1164  1165    16157     194000           4\n","1165  1166     9541     233170           4\n","1166  1167    10475     245350           4\n","1167  1168    10852     173000           4\n","\n","[584 rows x 4 columns]\n"]}]},{"cell_type":"markdown","source":["stratified random sampling - adding subgroup(strata)"],"metadata":{"id":"CULaBz_H5tmh"}},{"cell_type":"code","source":["dataset = pd.read_csv('Dataset.csv')\n","dataset['strata'] = np.repeat([1,2],len(dataset)/2)\n","index = []\n","for i in range(0,len(dataset)):\n","  index.append(i)\n","stratifieldrandomsample = dataset.iloc[index]\n","stratifieldrandomsample"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"haCt9j5V2O4k","executionInfo":{"status":"ok","timestamp":1747681900517,"user_tz":-330,"elapsed":89,"user":{"displayName":"jithinvgeorge19","userId":"07500276675486596672"}},"outputId":"f18ea353-0511-497f-f5a5-d03ff7ed62e8"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Id  LotArea  SalePrice  strata\n","0        1     8450     208500       1\n","1        2     9600     181500       1\n","2        3    11250     223500       1\n","3        4     9550     140000       1\n","4        5    14260     250000       1\n","...    ...      ...        ...     ...\n","1455  1456     7917     175000       2\n","1456  1457    13175     210000       2\n","1457  1458     9042     266500       2\n","1458  1459     9717     142125       2\n","1459  1460     9937     147500       2\n","\n","[1460 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-254a39b5-5c94-4c72-8fa6-c91af7cb2cc7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>LotArea</th>\n","      <th>SalePrice</th>\n","      <th>strata</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>8450</td>\n","      <td>208500</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>9600</td>\n","      <td>181500</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>11250</td>\n","      <td>223500</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>9550</td>\n","      <td>140000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>14260</td>\n","      <td>250000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1455</th>\n","      <td>1456</td>\n","      <td>7917</td>\n","      <td>175000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1456</th>\n","      <td>1457</td>\n","      <td>13175</td>\n","      <td>210000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1457</th>\n","      <td>1458</td>\n","      <td>9042</td>\n","      <td>266500</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1458</th>\n","      <td>1459</td>\n","      <td>9717</td>\n","      <td>142125</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1459</th>\n","      <td>1460</td>\n","      <td>9937</td>\n","      <td>147500</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1460 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-254a39b5-5c94-4c72-8fa6-c91af7cb2cc7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-254a39b5-5c94-4c72-8fa6-c91af7cb2cc7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-254a39b5-5c94-4c72-8fa6-c91af7cb2cc7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-77ce2e8f-1528-4b21-a376-b2f5aaac63cf\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77ce2e8f-1528-4b21-a376-b2f5aaac63cf')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-77ce2e8f-1528-4b21-a376-b2f5aaac63cf button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_c1a397c5-0c15-4e61-938d-cbfc38938da5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('stratifieldrandomsample')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c1a397c5-0c15-4e61-938d-cbfc38938da5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('stratifieldrandomsample');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"stratifieldrandomsample","summary":"{\n  \"name\": \"stratifieldrandomsample\",\n  \"rows\": 1460,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 421,\n        \"min\": 1,\n        \"max\": 1460,\n        \"num_unique_values\": 1460,\n        \"samples\": [\n          893,\n          1106,\n          414\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LotArea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9981,\n        \"min\": 1300,\n        \"max\": 215245,\n        \"num_unique_values\": 1073,\n        \"samples\": [\n          10186,\n          8163,\n          8854\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SalePrice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 79442,\n        \"min\": 34900,\n        \"max\": 755000,\n        \"num_unique_values\": 663,\n        \"samples\": [\n          91300,\n          174500,\n          150900\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"strata\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["stratifiled random sampling - sampling"],"metadata":{"id":"rYY1jVCR-Vh0"}},{"cell_type":"code","source":["!pip install scikit-learn\n","from sklearn.model_selection import StratifiedShuffleSplit as sss\n","\n","# set the split criteria\n","split = sss(n_splits=1, test_size=8)\n","\n","#perform data frame split\n","for x, y in split.split(dataset, dataset['strata']):\n","  stratifieldrandomsample = dataset.iloc[y].sort_values(by='SalePrice')\n","\n","stratifieldrandomsample"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":387},"id":"7is1kcKh8dTW","executionInfo":{"status":"ok","timestamp":1747682785605,"user_tz":-330,"elapsed":4129,"user":{"displayName":"jithinvgeorge19","userId":"07500276675486596672"}},"outputId":"a9774540-d8d4-4ee1-d019-7c8d61ebd2e1"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: scikit-learn in /usr/local/lib/python3.11/dist-packages (1.6.1)\n","Requirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (2.0.2)\n","Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (1.15.3)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (1.5.0)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (3.6.0)\n"]},{"output_type":"execute_result","data":{"text/plain":["        Id  LotArea  SalePrice  strata\n","582    583    11841     118500       1\n","1183  1184    10800     120000       2\n","44      45     7945     141000       1\n","799    800     7200     175000       2\n","1089  1090     3316     197000       2\n","1447  1448    10000     240000       2\n","324    325    11275     242000       1\n","478    479    10637     297000       1"],"text/html":["\n","  <div id=\"df-06fa20f6-6ba3-4706-80c7-16c3bb4fc6d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>LotArea</th>\n","      <th>SalePrice</th>\n","      <th>strata</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>582</th>\n","      <td>583</td>\n","      <td>11841</td>\n","      <td>118500</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1183</th>\n","      <td>1184</td>\n","      <td>10800</td>\n","      <td>120000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>45</td>\n","      <td>7945</td>\n","      <td>141000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>799</th>\n","      <td>800</td>\n","      <td>7200</td>\n","      <td>175000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1089</th>\n","      <td>1090</td>\n","      <td>3316</td>\n","      <td>197000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1447</th>\n","      <td>1448</td>\n","      <td>10000</td>\n","      <td>240000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>324</th>\n","      <td>325</td>\n","      <td>11275</td>\n","      <td>242000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>478</th>\n","      <td>479</td>\n","      <td>10637</td>\n","      <td>297000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06fa20f6-6ba3-4706-80c7-16c3bb4fc6d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-06fa20f6-6ba3-4706-80c7-16c3bb4fc6d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-06fa20f6-6ba3-4706-80c7-16c3bb4fc6d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-82447d6d-d582-44e8-a864-59882da0f36f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-82447d6d-d582-44e8-a864-59882da0f36f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-82447d6d-d582-44e8-a864-59882da0f36f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_246bc8db-df4d-4527-bf20-b7668556ef64\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('stratifieldrandomsample')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_246bc8db-df4d-4527-bf20-b7668556ef64 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('stratifieldrandomsample');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"stratifieldrandomsample","summary":"{\n  \"name\": \"stratifieldrandomsample\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 473,\n        \"min\": 45,\n        \"max\": 1448,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1184,\n          1448,\n          583\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LotArea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2846,\n        \"min\": 3316,\n        \"max\": 11841,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10800,\n          10000,\n          11841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SalePrice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64726,\n        \"min\": 118500,\n        \"max\": 297000,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120000,\n          240000,\n          118500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"strata\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":[],"metadata":{"id":"59I5t7eDAucM"},"execution_count":null,"outputs":[]}]}